import{_ as i,W as k,X as r,$ as a,a0 as t,Z as n,a1 as s,a2 as d,E as e}from"./framework-72c45ff9.js";const m={},b=n("h1",{id:"mock-assimilation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mock-assimilation","aria-hidden":"true"},"#"),s(" Mock Assimilation")],-1),h=n("h2",{id:"problem",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#problem","aria-hidden":"true"},"#"),s(" Problem")],-1),v=n("p",null,"You want to ensure internal methods of an object get called as expected and have no other side-effects:",-1),f=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MyClass"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"private"),s(" someProp "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(" hip"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'hop'"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),s("param1"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"boolean"),n("span",{class:"token punctuation"},","),s(" param2"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"string"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"runA"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("someProp"),n("span",{class:"token punctuation"},","),s(" param2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"const"),s(" resultB "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"runB"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("someProp"),n("span",{class:"token punctuation"},","),s(" param1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"runC"),n("span",{class:"token punctuation"},"("),s("resultB"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("someProp"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token string"},"'done'"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token function"},"runA"),n("span",{class:"token punctuation"},"("),s("config"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},","),s(" param"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"boolean"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token operator"},"!"),s("param"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token function"},"runB"),n("span",{class:"token punctuation"},"("),s("config"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"string"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" value "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token string"},"'foo'"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token string"},"'bar'"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'nope'"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token function"},"runC"),n("span",{class:"token punctuation"},"("),s("value"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"string"),n("span",{class:"token punctuation"},","),s(" config"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"any"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" value "),n("span",{class:"token operator"},"==="),s(),n("span",{class:"token string"},"'bar'"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token string"},"'done'"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'huh?'"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=d('<h2 id="solution" tabindex="-1"><a class="header-anchor" href="#solution" aria-hidden="true">#</a> Solution</h2><p>You can use <code>mockAssimilate(instance, name, { mock: [], whitelist?: []}</code> to assimilate your instance by overriding methods with mockable functions.</p><ul><li>You can use whitelist to ensure no property gets touched without you knowing.</li><li>The names listed in <code>mock</code> are automatically whitelisted.</li><li>If whitelist is not specified, other properties may be accessed.</li></ul><div class="hint-container danger"><p class="hint-container-title">Important</p><p>Use <code>mockAssimilate</code> only from within <code>it()</code>, <code>test()</code> or <code>beforeEach()</code> blocks.</p></div>',4),g=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" mockAssimilate "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vitezilla'"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" describe"),n("span",{class:"token punctuation"},","),s(" it"),n("span",{class:"token punctuation"},","),s(" expect "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vitest'"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"describe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'MyClass'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"describe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'#run()'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"it"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},`"should return false with param1=false and param2='foo'"`),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"const"),s(" myInstance "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"MyClass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"const"),s(" mock "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"mockAssimilate"),n("span",{class:"token punctuation"},"("),s("myInstance"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'myInstance'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
        mock`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'runA'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
        whitelist`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'run'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'someProp'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token comment"},"// Notice how you get auto-completion and type-checking:"),s(`
      mock`),n("span",{class:"token punctuation"},"."),s("runA"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),s("expect"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"anything"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"andReturn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

      `),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),s("myInstance"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'foo'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toBe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token function"},"it"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},`"should return true with param1=true and param2='foo'"`),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"const"),s(" myInstance "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"MyClass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"const"),s(" mock "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"mockAssimilate"),n("span",{class:"token punctuation"},"("),s("myInstance"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'myInstance'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),s(`
        mock`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'runA'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'runB'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'runC'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
        whitelist`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'run'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'someProp'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token comment"},"// Notice how you get auto-completion and type-checking:"),s(`
      mock`),n("span",{class:"token punctuation"},"."),s("runA"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),s("expect"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"anything"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"andReturn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      mock`),n("span",{class:"token punctuation"},"."),s("runB"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),s("expect"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"anything"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'foo'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"andReturn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'bar'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      mock`),n("span",{class:"token punctuation"},"."),s("runC"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'bar'"),n("span",{class:"token punctuation"},","),s(" expect"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"anything"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"andReturn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'done'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

      `),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),s("myInstance"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'foo'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toBe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token comment"},"// if the test passes, we know, that `runA/B/C` have been called"),s(`
      `),n("span",{class:"token comment"},"// and that nothing other than `run` and `someProp` have been accessed (get, set or called) during the test."),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function w(_,x){const o=e("CodeTabs"),c=e("RouterLink");return k(),r("div",null,[b,h,v,a(o,{id:"9",data:[{title:"my-class.ts"}]},{tab0:t(({title:p,value:l,isActive:u})=>[f]),_:1},8,["data"]),y,a(o,{id:"42",data:[{title:"my-class.spec.ts"}]},{tab0:t(({title:p,value:l,isActive:u})=>[g]),_:1},8,["data"]),n("p",null,[s("If you want to know more about what you can do with these expect calls, check out "),a(c,{to:"/core/expectations.html"},{default:t(()=>[s("Expectations")]),_:1}),s(".")])])}const C=i(m,[["render",w],["__file","mock-assimilate.html.vue"]]);export{C as default};
