import{_ as l,W as u,X as p,$ as t,a0 as e,Z as n,a1 as s,a2 as d,E as r}from"./framework-72c45ff9.js";const k={},m=n("h1",{id:"time-mocking",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#time-mocking","aria-hidden":"true"},"#"),s(" Time Mocking")],-1),b=n("h2",{id:"problem",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#problem","aria-hidden":"true"},"#"),s(" Problem")],-1),h=n("p",null,[s("You are using "),n("code",null,"setTimeout"),s(" and "),n("code",null,"clearTimeout"),s(" in your code and don't know how to test it without slowing down the code:")],-1),v=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"runDelayed"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function-variable function"},"callback"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),s("foo"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"string"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token keyword"},"void"),n("span",{class:"token punctuation"},","),s(" delay"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token builtin"},"number"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"setTimeout"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"callback"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'bar'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(" delay"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("h2",{id:"solution",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#solution","aria-hidden":"true"},"#"),s(" Solution")],-1),_=n("p",null,[s("We can replace "),n("code",null,"setTimeout()"),s(" and "),n("code",null,"clearTimeout()"),s(" to help test this code.")],-1),g=n("h3",{id:"setup-code",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#setup-code","aria-hidden":"true"},"#"),s(" Setup Code")],-1),y=n("p",null,"Time mocks are not enabled by default. You'll need to enable them first:",-1),w=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" mockTime "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vitezilla'"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"mockTime"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),T=d('<ul><li>This will replace <code>setTimeout()</code> and <code>clearTimeout()</code> on the <code>global</code> object (i.e. <code>window</code>).</li><li>It will also register itself with <code>afterEach</code> to verify no timeout is unexecuted when the test is over.</li></ul><h3 id="manipulating-time" tabindex="-1"><a class="header-anchor" href="#manipulating-time" aria-hidden="true">#</a> Manipulating Time</h3><p>When you&#39;ve set up time mocking as seen above, time will be frozen in regards to <code>setTimeout</code>. But now you can manually manipulate time using <code>advanceTime(ms)</code>:</p>',3),x=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" advanceTime "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vitezilla'"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" test"),n("span",{class:"token punctuation"},","),s(" expect"),n("span",{class:"token punctuation"},","),s(" vi "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'vitest'"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token function"},"test"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'should run callback delayed'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"const"),s(" callback "),n("span",{class:"token operator"},"="),s(" vi"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"fn"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token function"},"runDelayed"),n("span",{class:"token punctuation"},"("),s("callback"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1000"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token function"},"advanceTime"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"999"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),s("callback"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("not"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toHaveBeenCalled"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token function"},"advanceTime"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// current time (999) += 1ms"),s(`
  `),n("span",{class:"token function"},"expect"),n("span",{class:"token punctuation"},"("),s("callback"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toHaveBeenCalled"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=n("p",null,[s("As you can see, "),n("code",null,"advanceTime"),s(" adds the specified value to current time. Any callback registered via "),n("code",null,"setTimeout"),s(", which has run out of time will now be executed and removed from the internal list.")],-1);function B(A,N){const a=r("CodeTabs");return u(),p("div",null,[m,b,h,t(a,{id:"9",data:[{title:"run-delayed.ts"}]},{tab0:e(({title:o,value:c,isActive:i})=>[v]),_:1},8,["data"]),f,_,g,y,t(a,{id:"26",data:[{title:"vitest.setup.ts"}]},{tab0:e(({title:o,value:c,isActive:i})=>[w]),_:1},8,["data"]),T,t(a,{id:"49",data:[{title:"run-delayed.spec.ts"}]},{tab0:e(({title:o,value:c,isActive:i})=>[x]),_:1},8,["data"]),C])}const z=l(k,[["render",B],["__file","mock-time.html.vue"]]);export{z as default};
