import{_ as o,W as c,X as i,Y as t,Z as n,$ as e,a0 as p,a1 as s,a2 as u,E as l}from"./framework-72c45ff9.js";const r={},k=n("h1",{id:"introduction",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),s(" Introduction")],-1),d=n("div",{class:"hint-container warning"},[n("p",{class:"hint-container-title"},"Note"),n("p",null,[s("This is a "),n("strong",null,"Work In Progress"),s("! The API might change before version 1.0 is released.")])],-1),v=n("h3",{id:"features",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#features","aria-hidden":"true"},"#"),s(" Features")],-1),m=n("code",null,"mockBrowser",-1),b=n("code",null,"@vitezilla/webextension",-1),h=u(`<h3 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h3><p>This is an example of how a deep mock with <code>@vitezilla/webextension</code> looks like:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> describe<span class="token punctuation">,</span> expect<span class="token punctuation">,</span> it<span class="token punctuation">,</span> vi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vitest&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> mockBrowser <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vitezilla/webextension&#39;</span><span class="token punctuation">;</span>

<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;WebExtension Helpers&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;getActiveTabs()&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;should return active tabs&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> tabs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      mockBrowser<span class="token punctuation">.</span>tabs<span class="token punctuation">.</span>query<span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token punctuation">{</span> active<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andResolve</span><span class="token punctuation">(</span>tabs<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">getActiveTabs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span>tabs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">&#39;onBeforeRedirect()&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;should register a listener and return a handle to remove the listener again&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> listener <span class="token operator">=</span> vi<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      mockBrowser<span class="token punctuation">.</span>webRequest<span class="token punctuation">.</span>onBeforeRedirect<span class="token punctuation">.</span>addListener<span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span>listener<span class="token punctuation">,</span> expect<span class="token punctuation">.</span><span class="token function">anything</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">const</span> removeListener <span class="token operator">=</span> <span class="token function">onBeforeRedirect</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">;</span>

      mockBrowser<span class="token punctuation">.</span>webRequest<span class="token punctuation">.</span>onBeforeRedirect<span class="token punctuation">.</span>removeListener<span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">removeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function f(g,x){const a=l("RouterLink");return c(),i("div",null,[k,t(" #region contents "),d,v,n("ul",null,[n("li",null,[e(a,{to:"/webextension/browser.html"},{default:p(()=>[m]),_:1}),s(" object exported from the "),b,s(" package")]),n("li",null,[e(a,{to:"/webextension/mock-event.html"},{default:p(()=>[s("Event Mocking")]),_:1})])]),h,t(" #endregion contents ")])}const w=o(r,[["render",f],["__file","index.html.vue"]]);export{w as default};
